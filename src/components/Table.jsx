import { useState, useEffect } from 'react'
import { Flex } from "@chakra-ui/layout";
import { Stack, Box, Text, Icon, VStack, useMediaQuery } from "@chakra-ui/react"
import './Table.css'

const Table = ({ table }) => {
    const [isLarger] = useMediaQuery("(min-width: 380px)");
    const [bgColor,setBgColor] = useState("theme.200");
    const [positionX, setPositionX] = useState("");
    const [positionY, setPositionY] = useState("");
    const [width, setWidth] = useState("");
    const [stateTable, setStateTable] = useState("Disponible");
    const [iconTable,setIconTable] = useState();
    const [heartBeatClass, setHeartBeatClass] = useState('');

    const CheckBillIcon = () => {
        return (
            <Icon w={10} h={10} viewBox="0 0 380.721 380.721">
                <path d="M58.727,281.236c0.32-5.217,0.657-10.457,1.319-15.709c1.261-12.525,3.974-25.05,6.733-37.296
			c1.725-6.101,3.561-12.106,5.449-17.997c2.463-5.729,4.868-11.433,7.25-17.01c5.438-10.898,11.491-21.07,18.724-29.593
			c1.737-2.19,3.427-4.328,5.095-6.46c1.912-1.894,3.805-3.747,5.676-5.588c3.863-3.509,7.221-7.273,11.107-10.091
			c7.686-5.711,14.529-11.137,21.477-14.506c6.698-3.724,12.455-6.982,17.631-8.812c10.125-4.084,15.883-6.141,15.883-6.141
			s-4.915,3.893-13.502,10.207c-4.449,2.917-9.114,7.488-14.721,12.147c-5.803,4.461-11.107,10.84-17.358,16.992
			c-3.149,3.114-5.588,7.064-8.551,10.684c-1.452,1.83-2.928,3.712-4.427,5.6c-1.261,2.074-2.533,4.165-3.84,6.286
			c-5.537,8.208-9.673,17.858-13.995,27.664c-1.748,5.1-3.566,10.283-5.391,15.534c-1.249,5.473-2.638,10.98-4.16,16.476
			c-2.266,11.271-4.502,22.761-5.438,34.612c-0.68,4.287-1.022,8.633-1.383,12.979c94,0.023,166.775,0.069,268.589,0.069
			c0.337-4.462,0.534-8.97,0.534-13.536c0-85.746-62.509-156.352-142.875-165.705c5.17-4.869,8.436-11.758,8.436-19.433
			c-0.023-14.692-11.921-26.612-26.631-26.612c-14.715,0-26.652,11.92-26.652,26.642c0,7.668,3.265,14.558,8.464,19.426
			c-80.396,9.353-142.869,79.96-142.869,165.706c0,4.543,0.168,9.027,0.5,13.467C39.736,281.236,49.327,281.236,58.727,281.236z"/>
            </Icon>
        )
    }

    const EmptyTableIcon = () => {
        return (
            <Icon w={10} h={10} viewBox="0 0 380.721 380.721">
                <path d="M190.372,29.813c-88.673,0-160.546,71.873-160.546,160.547c0,65.89,39.73,122.438,96.504,147.173l2.092-40.525
			c0-32.242-23.83-21.912-23.83-44.465c0-12.641,0.395-38.98,0.395-58.755c0-52.697,22.377-103.673,27.874-115.048
			c5.53-11.363,18.537-23.76,18.677-11.828c0,17.312,0.738,218.618,0.738,218.618h-0.035l2.463,61.241
			c11.497,2.626,23.395,4.125,35.669,4.125c6.728,0,13.304-0.546,19.822-1.349l5.31-102.906
			c-13.106-2.869-24.283-11.212-31.295-21.68c-8.685-13.014,6.675-128.067,6.675-128.067h10.004v107.978h9.922V96.894h10.84v107.978
			h9.889V96.894h11.258v107.978h9.911V96.894h7.668c0,0,15.349,115.054,6.669,128.067c-6.947,10.363-18.009,18.682-30.952,21.633
			c-0.232,0.07-0.441,0.163-0.441,0.163l5.02,95.993c63.995-21.11,110.249-81.307,110.249-152.39
			C350.907,101.687,279.034,29.813,190.372,29.813z"/>
                <path d="M190.372,0C85.415,0,0,85.397,0,190.36C0,295.3,85.415,380.721,190.372,380.721c104.952,0,190.35-85.421,190.35-190.361
			C380.721,85.397,295.324,0,190.372,0z M190.372,366.523c-97.144,0-176.18-79.03-176.18-176.163
			c0-97.144,79.036-176.18,176.18-176.18c97.133,0,176.175,79.036,176.175,176.18C366.546,287.493,287.504,366.523,190.372,366.523z
			"/>
            </Icon>
        )
    }

    const FullTableIcon = () => {
        return (
            <Icon w={10} h={10} viewBox="0 0 380.721 380.721" x="0px" y="0px"> {/*agrandar más con width="100px" height="100px" */}
                <path d="M344.308,327.389l0.116-0.047c0,0-82.888-84.119-91.021-92.252c-5.042-1.487-34.53-14.454-35.041-38.83
		c12.583-14.418,30.882-28.268,57.907-28.541c0.046-0.023,0.186-0.035,0.256-0.035c12.223,0.331,24.562-3.724,34.38-12.304
		c0.685-0.604,2.3-2.248,2.3-2.248l67.517-85.089l-8.11-8.139l-82.597,87.448l-9.748-9.777l85.014-85.008l-7.146-7.105
		l-85.514,85.531l-8.087-8.093l85.525-85.531l-7.865-7.849l-85.525,85.52l-9.586-9.568l88.279-82.818l-7.413-7.413l-81.354,63.38
		c0,0-2.95,2.486-3.973,3.521c-11.166,11.16-15.965,26.305-14.361,40.892c-1.127,18.503-7.11,32.242-14.871,42.687
		C61.724,17.344,4.531,33.215,4.531,33.215L0,37.81c0,0,101.983,102.262,164.997,165.398c-22.11,22.134-128.7,128.724-128.7,128.724
		l0.011,0.023c-0.093,0.092-0.209,0.127-0.319,0.243c-7.616,7.622-7.587,19.961,0.012,27.571c7.604,7.61,19.979,7.61,27.565,0.023
		c0.122-0.116,0.157-0.244,0.227-0.314l0.023,0.023c0,0,106.724-106.693,128.706-128.665c11.525,11.538,19.217,19.241,20.728,20.751
		c9.341,9.389,103.383,103.43,103.383,103.43h0.116c0,0.116,0.104,0.221,0.209,0.268c7.599,7.656,20.077,7.656,27.664,0
		c7.703-7.588,7.703-20.02,0-27.664C344.529,327.504,344.424,327.458,344.308,327.389z"/>
            </Icon>
        )
    }

    const MercadoPagoIcon = () => {
        return (
            <Icon w={10} h={10} viewBox="0 0 380.721 380.721" x="0px" y="0px"> {/*agrandar más con width="100px" height="100px" */}
                <path d="M12.8345 3.16228C12.8911 3.11941 12.9406 3.06928 12.9821 3.01371L15.5437 3.01371C15.5556 3.01371 15.5674 3.01343 15.5793 3.01287C15.7492 3.0048 15.9191 3.00485 16.0884 3.01287C16.1002 3.01343 16.1121 3.01371 16.1239 3.01371H16.1622C16.7372 3.01371 17.2807 3.13977 17.7684 3.36505C17.7813 3.37102 17.7944 3.37661 17.8076 3.38184C18.7252 3.74393 19.5443 4.36082 20.1474 5.20428C21.0565 6.4756 21.34 8.06951 20.9522 9.55242L17.6706 6.31483C17.5303 6.17636 17.3411 6.09873 17.1439 6.09873L12.3991 6.09873C12.3889 6.09873 12.3787 6.09894 12.3685 6.09935C12.2158 6.10558 12.0684 6.15834 11.9462 6.25093L10.0616 7.67873C10.0085 7.71898 9.95251 7.75291 9.89456 7.78064C9.48892 7.97478 8.98739 7.86539 8.70382 7.49495C8.66353 7.44232 8.62954 7.38691 8.60174 7.3296C8.40712 6.92844 8.51546 6.43454 8.88527 6.15436L12.8345 3.16228Z" fill="#212121"/>
                <path d="M7.89848 14.2357L7.88524 14.2487L6.91116 15.2166L6.89837 15.2294C6.54534 15.5663 5.98426 15.562 5.63654 15.2165C5.28444 14.8667 5.28444 14.2995 5.63654 13.9496L6.61062 12.9818C6.96272 12.6319 7.53358 12.6319 7.88568 12.9818C8.23346 13.3273 8.23772 13.885 7.89848 14.2357Z" fill="#212121"/>
                <path d="M7.60772 15.9344C7.26849 16.2852 7.27276 16.8428 7.62053 17.1883C7.97263 17.5382 8.5435 17.5382 8.8956 17.1883L9.86967 16.2205C10.2218 15.8706 10.2218 15.3034 9.86967 14.9536C9.82621 14.9104 9.77941 14.8725 9.7301 14.84C9.38493 14.6123 8.91673 14.6459 8.60783 14.9407L8.59505 14.9535L7.62097 15.9214L7.60772 15.9344Z" fill="#212121"/>
                <path d="M5.50058 11.4079C5.85268 11.7578 5.85268 12.325 5.50058 12.6748L4.5265 13.6427C4.1744 13.9925 3.60354 13.9925 3.25144 13.6427C2.89934 13.2928 2.89934 12.7256 3.25144 12.3758L4.22552 11.4079C4.57761 11.0581 5.14848 11.0581 5.50058 11.4079Z" fill="#212121"/>
                <path d="M11.8542 16.9253C12.2063 17.2752 12.2063 17.8424 11.8542 18.1922L10.8801 19.1601C10.8078 19.2318 10.7264 19.2889 10.6395 19.3312C10.303 19.4952 9.88489 19.4381 9.60502 19.1601C9.32515 18.882 9.26774 18.4666 9.43277 18.1322L9.43404 18.1296C9.4765 18.0443 9.5335 17.9642 9.60502 17.8932L10.5791 16.9253C10.9312 16.5755 11.5021 16.5755 11.8542 16.9253Z" fill="#212121"/>
                <path d="M5.3439 4.83107C6.73954 3.44435 8.63783 2.86145 10.456 3.08238L7.97943 4.95876C6.89415 5.78101 6.68509 7.32557 7.51275 8.40674C8.33862 9.48558 9.88451 9.69482 10.9675 8.87433L12.6511 7.59873L16.8362 7.59873L20.3426 11.0581C20.3538 11.0719 20.3658 11.0853 20.3786 11.0981L21.5285 12.2481C22.0903 12.8099 22.0903 13.7207 21.5285 14.2825C20.9987 14.8123 20.1585 14.8425 19.5934 14.3731L19.4971 14.2768C19.4781 14.2578 19.458 14.2407 19.437 14.2254L18.3441 13.1326C18.1488 12.9373 17.8323 12.9373 17.637 13.1326C17.4417 13.3278 17.4417 13.6444 17.637 13.8397L18.787 14.9896C18.8286 15.0312 18.8713 15.071 18.915 15.109L18.9589 15.1528C19.3568 15.5508 19.3568 16.196 18.9589 16.594C18.5609 16.992 17.9156 16.992 17.5177 16.594L17.3488 16.4251C17.1535 16.2298 16.8369 16.2298 16.6417 16.4251C16.5415 16.5252 16.4928 16.6572 16.4953 16.7884C16.4924 16.9201 16.5411 17.0527 16.6416 17.1532L16.8646 17.3762C17.2327 17.7443 17.2327 18.3411 16.8646 18.7092C16.4965 19.0773 15.8997 19.0773 15.5316 18.7092L15.5305 18.7081L15.5188 18.6962L15.3087 18.4862C15.2363 18.4137 15.1471 18.3681 15.0536 18.3495C14.8951 18.3178 14.7243 18.3633 14.6015 18.4862C14.4063 18.6814 14.4063 18.998 14.6015 19.1933L14.8199 19.4117C15.1869 19.7876 15.1842 20.3898 14.8117 20.7623C14.4431 21.1308 13.848 21.1384 13.4702 20.7793L12.0386 19.4187L12.5635 18.8971C13.3074 18.1579 13.3074 16.9596 12.5635 16.2205C12.1709 15.8303 11.6495 15.6461 11.1352 15.6679C11.1571 15.1569 10.9717 14.6389 10.579 14.2487C10.1865 13.8587 9.66531 13.6745 9.15123 13.6961C9.17308 13.1852 8.98769 12.6671 8.59505 12.277C8.09544 11.7805 7.38733 11.6175 6.7508 11.7879C6.69714 11.3912 6.51686 11.008 6.20995 10.7031C5.52351 10.021 4.44351 9.96838 3.6963 10.5451C3.23454 8.55553 3.78374 6.38124 5.3439 4.83107Z" fill="#212121"/>
            </Icon>
        )
    }



    const tableConfiguration = (tableState) => {
        switch (tableState) {
            case "empty":
                setBgColor("green.400");
                setIconTable(<EmptyTableIcon />);
                setStateTable("Disponible")
                break;
            case "inUse":
                setBgColor("red.500");
                setIconTable(<FullTableIcon />);
                setStateTable("En uso")
                break;
            case "bill":
                setBgColor("orange");
                setIconTable(<CheckBillIcon />);
                setStateTable("Llamada mozo")
                setHeartBeatClass("heartbeat")
                break;
            case "mercadoPago":
                setBgColor("facebook.300");
                setIconTable(<MercadoPagoIcon />);
                setStateTable("Llamada mozo")
                break;
            default:
                setBgColor("green.400");
                setIconTable(<EmptyTableIcon />);
                setStateTable("Disponible")
                break;
        }
    }

    useEffect(() => {
        const x = `${table.x}px`;
        const y = `${table.y}px`;
        setWidth(`${(1 + table.size * 10 / 100) * 120}px`)
        setPositionX(x);
        setPositionY(y);
        tableConfiguration(table.state);
    }, [table]);


    const viewLargerDevices = () => {
        return (
            <Box
                width={width}
                height="10vh"
                borderWidth="2px"
                borderRadius="lg"
                position="absolute"
                top={positionY}
                left={positionX}
                marginLeft="20%"
                marginTop="12.5%"
                bg={bgColor}
                display="flex"
                justifyContent="space-between"
                padding={5}
                boxShadow="0px 8px 10px -5px #000000"
                className={heartBeatClass}
            >
                <Text fontSize="30px" fontWeight={900}>{table.id}</Text>
                <Box d="flex" justifyContent="center" alignItems="center" h="100%" title={stateTable}>
                    {iconTable}
                </Box>
            </Box>
        )
    }

    const viewSmallDevices = () => {
        return (
            <VStack bgColor={bgColor} key={table.id} margin="3" width="100%" borderRadius="lg" shadow="md">
                <Stack
                    justifyContent="center"
                    alignItems="center"
                    direction="row"
                    spacing={"10"}
                    padding={3}
                    width="43vh"
                    className="animate__heartBeat"
                >
                    <Text color="theme.100" fontSize="lg" data-testid="table-small-id">{table.id}</Text>
                    <Text color="theme.100" fontSize="lg" as="em" data-testid="table-small-state">{table.state}</Text>
                </Stack>
            </VStack>
        )
    }

    return (
        <Flex>
            {
                isLarger ? viewLargerDevices() : viewSmallDevices()
            }
        </Flex>
    )
}

export default Table;